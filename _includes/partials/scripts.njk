<script type="text/javascript">

  // IIFE wrapper start
  (function() {

    //== Load Fonts (prevent FOIT) ==//

    // https://gomakethings.com/preventing-foit-with-web-fonts-using-the-vanilla-js-fonts.load-method/

    {

      // If the browser supports the fonts.load() method
      if ('fonts' in document) {

      	// When all fonts are loaded
      	Promise.all([
      		document.fonts.load('200 1rem Nunito Sans'),
      		document.fonts.load('400 1rem Nunito Sans'),
      		document.fonts.load('700 1rem Nunito Sans')
      	]).then(function () {
      		// The font is loaded
      		// Add our 'fonts-loaded' class
      		document.documentElement.className += 'fonts-loaded';
      	});

      }

    }

    //== Accessible Nested Menu (see https://codepen.io/zheisey/pen/dyPVVWQ) ==//

    {

      let headerMenu = document.querySelector('header#menu');
      let menuButtons = document.querySelectorAll('header button');
      let breakpoint = window.matchMedia('(min-width: 768px)');

      // Close open menus
      function closeOpenMenus() {
        // Loop through buttons and set aria-expanded to false
        for (button of menuButtons) {
          button.setAttribute('aria-expanded', 'false');
        }

      }

      // Listen for clicks on header menu
      headerMenu.addEventListener('click', function(event) {

        // Check if click is on a button element
        if (event.target.nodeName === 'BUTTON') {

          // If the menu button was clicked AND there are drop-down menus open, close all drop-down menus
          if (event.target === menuButtons[0] && menuButtons[0].getAttribute('aria-expanded') === 'true') {

            closeOpenMenus();
            return;

          }

          // Otherise, expand/close drop-down menus based on aria-expanded attribute
          if (event.target.getAttribute('aria-expanded') === 'false') {

            event.target.setAttribute('aria-expanded', 'true');

          }

          else {

            event.target.setAttribute('aria-expanded', 'false');

          }

        }

      }, false);

      // Listen for keydown event on document
      headerMenu.addEventListener('keydown', function(event) {

        if (event.key === 'Escape') {

          // If target is already expanded, close it
          if (event.target.getAttribute('aria-expanded') === 'true') {

            event.target.setAttribute('aria-expanded', 'false');

          }

          // Otherwise, close the nearest open menu
          else {

            var nearestOpen = event.target.closest('ul').previousElementSibling;
            if (nearestOpen && nearestOpen.getAttribute('aria-expanded') === 'true') {

              nearestOpen.setAttribute('aria-expanded', 'false');
              nearestOpen.focus();

            }

            else {

              closeOpenMenus();
              menuButtons[0].focus();

            }

          }

        }

      }, false);

      // Listen for focusout on header menu
      headerMenu.addEventListener('focusout', function(event) {

        if (breakpoint.matches) {

          var parent = event.target.closest('header nav > ul > li');

          if (parent && !parent.contains(event.relatedTarget)) {

            closeOpenMenus();

          }

        }

      }, false);

      // Listen for resize on window
      window.addEventListener('resize', function(event) {

        if (breakpoint.matches) {

          closeOpenMenus();

        }

      }, true);

    }

    //== YouTube Lite ==//

    {

      // If there are videos on the page, append lite-youtube-embed script to footer and styles to head
      if (document.querySelector('lite-youtube')) {

        let head = document.querySelector('head');
        let footer = document.querySelector('footer');
        let css = document.createElement('link');
        let js = document.createElement('script');

        css.rel = 'stylesheet';
        css.href = '/assets/css/lite-youtube-embed.css';

        js.type = 'text/javascript';
        js.src = '/assets/js/lite-youtube-embed.js';

        head.appendChild(css);
        footer.appendChild(js);

      }

    }

    //== Carousel (class-based) ==//

    {

      let carousel = document.querySelector('.slides');
      let prevButton = document.querySelector('button[name="prev"]');
      let nextButton = document.querySelector('button[name="next"]');

      // Show next slide
      function showNextSlide(event) {

        // Grab current and next slides
        var currentSlide = document.querySelector('[data-slide]:not([hidden])');
        var nextSlide = currentSlide.nextElementSibling || document.querySelector('[data-slide]:first-of-type');

        // Add/remove necessary classes
        nextSlide.hidden = false;
        currentSlide.classList.add('next-leaving');
        nextSlide.classList.add('next-entering');

      };

      // Show previous slide
      function showPreviousSlide(event) {

        // Grab current and previous slides
        var currentSlide = document.querySelector('[data-slide]:not([hidden])');
        var previousSlide = currentSlide.previousElementSibling || document.querySelector('[data-slide]:last-of-type');

        // Add/remove necessary classes
        previousSlide.hidden = false;
        currentSlide.classList.add('previous-leaving');
        previousSlide.classList.add('previous-entering');

      };

      // Listen for clicks on Prev & Next buttons
      prevButton.addEventListener('click', showPreviousSlide, false);
      nextButton.addEventListener('click', showNextSlide, false);

      // Add/remove necessary classes after animation
      carousel.addEventListener('animationend', function(event) {
        if (event.target.classList.contains('next-leaving') || event.target.classList.contains('previous-leaving')) {
          event.target.hidden = true;
        }
        event.target.classList.remove('next-entering', 'next-leaving', 'previous-entering', 'previous-leaving');

      }, false);

    }

  }()); // IIFE wrapper end

</script>
